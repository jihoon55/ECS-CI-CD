
name: KJH build was image and push to ecr repository

on:
  push:
    branches: [ "main" ]
    
env:
  AWS_REGION: ap-northeast-2                 # set this to your preferred AWS region, e.g. us-west-1
  ECR_REPOSITORY: project_02           # set this to your Amazon ECR repository name
  ECS_SERVICE: was-svc                # set this to your Amazon ECS service name
  ECS_CLUSTER: helloworld-was-cluster                # set this to your Amazon ECS cluster name
  ECS_TASK_DEFINITION: ./devops-03-P2-TeamB/helloworld-was-task-definition3:1.json # set this to the path to your Amazon ECS task definition
                                               # file, e.g. .aws/task-definition.json
  CONTAINER_NAME: helloworld-was-container3           # set this to the name of the container in the
                                               # containerDefinitions section of your task definition

permissions:
  contents: read

jobs:
  deploy:
    name: KJH Deploy
    runs-on: ubuntu-latest
    environment: production


    steps:
    - name: KJH Checkout repo
      uses: actions/checkout@v3

    - name: KJH Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.KJH_AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.KJH_AWS_SECRET_ACCESS_KEY }}
        aws-region: ap-northeast-2

    - name: KJH Login to Amazon ECR
      id: login-ecr2
      uses: aws-actions/amazon-ecr-login@v1

    - name: KJH Build, tag, and push docker image to Amazon ECR
      id: build-image
      env:
        ECR_REGISTRY: ${{ steps.login-ecr2.outputs.registry }}
        ECR_REPOSITORY: project_02
        IMAGE_TAG: ${{ github.sha }}
      run: |
        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG ./devops-03-P2-TeamB
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
        echo "image=$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG" >> $GITHUB_OUTPUT

    - name: KJH Fill in the new image ID in the Amazon ECS task definition
      id: task-def
      uses: aws-actions/amazon-ecs-render-task-definition@v1
      with:
        task-definition: ${{ env.ECS_TASK_DEFINITION }}
        container-name: ${{ env.CONTAINER_NAME }}
        image: ${{ steps.build-image.outputs.image }}

    - name: KJH Deploy Amazon ECS task definition
      uses: aws-actions/amazon-ecs-deploy-task-definition@v1
      with:
        task-definition: ${{ steps.task-def.outputs.task-definition }}
        service: ${{ env.ECS_SERVICE }}
        cluster: ${{ env.ECS_CLUSTER }}
        wait-for-service-stability: true
        
